{"version":3,"sources":["components/main/index.jsx","components/mainMenuBar/index.jsx","components/MainMenuBar/MainMenuBar.js","components/SendOrder/SendOrder.js","components/Ratings/Ratings.js","containers/app/index.jsx","serviceWorker.js","store/test.js","store/reducers.js","store/store.js","index.js"],"names":["Main","react_default","a","createElement","className","Component","PureComponent","routerStyle","color","textDecoration","fontSize","fontWeight","iconStyle","paddingLeft","logoStyle","flex","MainMenuBar","AppBar_default","this","props","theme","palette","primary","secondary","MenuList_default","style","Link","to","MenuItem_default","SvgIcon_default","d","index_es","withTheme","SendOrder","paddingTop","Ratings","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","history","createBrowserHistory","Router","components_MainMenuBar_MainMenuBar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","initialState","combineReducers","test","arguments","length","undefined","store","createHistory","createStore","reducers","compose","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","f","applyMiddleware","thunk","createMuiTheme","main","green","type","backgroundColor","amber","ReactDOM","render","styles","es","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2cbd0084.chunk.js","sourcesContent":["/* eslint-disable */\r\n// TODO: remove eslint-disable after updating Main Component\r\nimport React, { Component } from 'react';\r\nimport './style.scss';\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Main\">\r\n        <div className=\"Main__header\">\r\n          <h1>Smart Grozny:</h1>\r\n          <h6>Улучшения качества жизни граждан и облика муниципального образования через активное вовлечение жителей в жизнь города.\r\n            Контролируя состояние инфраструктуры, проезжей части, транспортных узлов, освещения, уборки, а также благоустройство территорий и многое другое, население помогает органам исполнительной власти города своевременно устранять возникшие сбои. Отлаженный процесс реагирования городских властей на обращения через систему позволяет без ненужных бумаг и «походов» в органы исполнительной власти оперативно получить ответ с подтверждением устранения проблемы или конкретным сроком ее устранения с момента сообщения от пользователя.\r\n            Сводная информация о проблематике и предложениях жителей регулярно представляется высшему должностному лицу муниципалитета с аналитическим материалом для принятия мер по совершенствованию деятельности городских служб. Вовлекая  жителей в прозрачный и понятный процесс совместного управления городом на ключевых организационных стадиях – подача идей, принятие решений и контроль за исполнением, муниципалитет обеспечивает полноправное эффективное партнерство власти и населения.</h6>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMain.propTypes = {};\r\n\r\nexport default Main;\r\n","/* eslint-disable */\r\n// TODO: Убрать Eslint-disable после добавления стейта или вызова методов фижненного цикла в компоненте\r\nimport React, { PureComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\nclass MainMenuBar extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"main-menu-bar\">\r\n        <AppBar position=\"static\">\r\n          <MenuList className=\"main-menu-bar__menu-list\">\r\n            <MenuItem><Link to=\"/\">Главная</Link></MenuItem>\r\n            <MenuItem><Link to=\"/\">Подать заявку</Link></MenuItem>\r\n            <MenuItem><Link to=\"/\">Рейтинги</Link></MenuItem>\r\n            <MenuItem className=\"main-menu-bar__signin\"><Link to=\"/\">Вход</Link></MenuItem>\r\n          </MenuList>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainMenuBar;\r\n","import React, { PureComponent } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { Grade, Create, AccountCircle } from '@material-ui/icons';\r\nconst routerStyle = {\r\n  color: '#acb6bf',\r\n  textDecoration: 'none',\r\n  fontSize: 16,\r\n  fontWeight: 700,\r\n};\r\nconst iconStyle = {\r\n  paddingLeft: 5,\r\n  fontSize: 16,\r\n  fontWeight: 700,\r\n};\r\nconst logoStyle = {\r\n  color: '#acb6bf',\r\n  flex: 1,\r\n  paddingLeft: 20,\r\n};\r\n\r\nclass MainMenuBar extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"main-menu-bar\">\r\n        <AppBar\r\n          color={this.props.theme.palette.primary.secondary}\r\n        >\r\n          <MenuList className=\"main-menu-bar__menu-list\">\r\n            <div style={logoStyle}>\r\n              <RouterLink style={routerStyle} to=\"/\" />\r\n              Smart Grozny\r\n            </div>\r\n            <MenuItem style={routerStyle}>\r\n              <RouterLink style={routerStyle} to=\"/\">Главная</RouterLink>\r\n              <SvgIcon style={iconStyle}>\r\n                <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n              </SvgIcon>\r\n            </MenuItem>\r\n            <MenuItem style={routerStyle}>\r\n              <RouterLink style={routerStyle} to=\"/sendorder\">Подать заявку</RouterLink>\r\n              <SvgIcon style={iconStyle}>\r\n                <Create />\r\n              </SvgIcon>\r\n            </MenuItem>\r\n            <MenuItem style={routerStyle}>\r\n              <RouterLink style={routerStyle} to=\"/ratings\">Рейтинги</RouterLink>\r\n              <SvgIcon style={iconStyle}>\r\n                <Grade />\r\n              </SvgIcon>\r\n            </MenuItem>\r\n            <MenuItem style={routerStyle} className=\"main-menu-bar__signin\">\r\n              <RouterLink style={routerStyle} to=\"/\">Вход</RouterLink>\r\n              <SvgIcon style={iconStyle}>\r\n                <AccountCircle />\r\n              </SvgIcon>\r\n            </MenuItem>\r\n          </MenuList>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme()(MainMenuBar);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SendOrder extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: 100 }}>\r\n        <h1>Подача заявки</h1>\r\n        Для подачи заявки заполните форму ниже.\r\n        Подать заявку можно если ваша УК подключена к сервису “Доступный Грозный”.\r\n        К порталу “Доступный Грозный” подключены следующие УК:\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSendOrder.propTypes = {};\r\n\r\nexport default SendOrder;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Ratings extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: 100 }}>\r\n        <h1>Рейтинг УК</h1>\r\n        Ниже перечислены управляющие компании, которые подключены к сервису “Smart Grozny”.\r\n\r\n        Процент выполнения заявок за последние 30 дней.\r\n\r\n        Процент выполнения текущих заявок заявок за последние 30 дней.\r\n\r\n        Процент выполнения аварийных заявок за последние 30 дней.\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRatings.propTypes = {};\r\n\r\nexport default Ratings;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Route,\r\n  Router,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\nimport { Main } from '../../components';\r\nimport './style.scss';\r\nimport MainMenuBar from '../../components/MainMenuBar/MainMenuBar';\r\nimport SendOrder from '../../components/SendOrder/SendOrder';\r\nimport Ratings from '../../components/Ratings/Ratings';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.history = createBrowserHistory();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router history={this.history}>\r\n        <div>\r\n          <header>\r\n            <MainMenuBar />\r\n          </header>\r\n          <main>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Main} />\r\n              <Route exact path=\"/sendorder\" component={SendOrder} />\r\n              <Route exact path=\"/ratings\" component={Ratings} />\r\n            </Switch>\r\n            {/* <Route exact path=\"/about-us\" component={About} /> */}\r\n          </main>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable */\r\nconst initialState = {};\r\n\r\nexport default (state = initialState) => {\r\n  return state;\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport test from './test';\r\n\r\n\r\nexport default combineReducers({\r\n  test,\r\n});\r\n","/* eslint-disable no-underscore-dangle */\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport reducers from './reducers';\r\n\r\nexport const history = createHistory();\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  compose(\r\n    window.devToolsExtension ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n    applyMiddleware(thunk),\r\n  ),\r\n);\r\n\r\nexport default store;\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { purple, amber, green } from '@material-ui/core/colors';\r\nimport { App } from './containers';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store/store';\r\nimport './index.scss';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#2d3e50',\r\n    },\r\n    secondary: green,\r\n    type: 'dark',\r\n  },\r\n  App: {\r\n    backgroundColor: amber[500],\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </MuiThemeProvider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}